#!/usr/bin/env perl

use strict;
use warnings;
use 5.010;

use DBI;
use List::Util qw(first);
use Travel::Status::DE::IRIS;

our $VERSION = '0.00';

my $station = shift or die("Usage: $0 <station> <database>\n");
my $dbname  = shift or die("Usage: $0 <station> <database>\n");

my $first_run = not -e $dbname;

my $dbh = DBI->connect( "dbi:SQLite:dbname=$dbname", q{}, q{} );

if ($first_run) {
	my $query = qq{
		create table departures (
			train_id int not null,
			station char(10) not null,
			raw_id char(64) not null unique,
			scheduled_time int not null,
			delay int,
			is_canceled boolean,
			destination char(64) not null,
			train_type char(6) not null,
			train_no int not null,
			line_no int,
			platform char(16),
			primary key (train_id, scheduled_time)
		)
	};
	$dbh->do($query);
	for my $msg ( 1 .. 99 ) {
		$dbh->do(
			qq{create table msg_$msg (
			train_id int not null,
			scheduled_time int not null,
			primary key (train_id, scheduled_time)
		)}
		);
	}
	$dbh->do(qq{create view public_departures as
		select * from departures where station == 'EDUV'});
}

my $status = Travel::Status::DE::IRIS->new(
	station   => $station,
	lookahead => 60
);

my @fields = (
	qw(train_id station raw_id scheduled_time delay
	  is_canceled destination train_type train_no line_no platform)
);
my $fieldlist = join( ', ', @fields );
my $field_placeholders = join( ', ', ('?') x @fields );
my $insert_query = qq{
	insert or replace into departures ( $fieldlist ) values ( $field_placeholders )
};
my $sth = $dbh->prepare($insert_query);

my @msg_sth;
for my $msg ( 1 .. 99 ) {
	$msg_sth[$msg] = $dbh->prepare(
		qq{insert or replace into msg_$msg
		( train_id, scheduled_time ) values ( ?, ? ) }
	);
}

for my $r ( $status->results ) {

	my @msgtypes = (0) x 100;
	for my $m ( $r->raw_messages ) {
		$msgtypes[ $m->[1] ] = 1;
	}

	$sth->execute(
		$r->train_id,        $station,  $r->raw_id,
		$r->datetime->epoch, $r->delay, $r->is_cancelled,
		$r->destination,     $r->type,  $r->train_no,
		$r->line_no,         $r->sched_platform
	);

	for my $msg ( 1 .. 99 ) {
		if ( $msgtypes[$msg] ) {
			$msg_sth[$msg]->execute( $r->train_id, $r->datetime->epoch );
		}
	}
}

__END__

=head1 NAME

=head1 SYNOPSIS

=head1 VERSION

=head1 DESCRIPTION

=head1 OPTIONS

=over

=back

=head1 EXIT STATUS

=head1 CONFIGURATION

None.

=head1 DEPENDENCIES

=over

=back

=head1 BUGS AND LIMITATIONS

=head1 AUTHOR

Copyright (C) 2015 by Daniel Friesel E<lt>derf@finalrewind.orgE<gt>

=head1 LICENSE

  0. You just DO WHAT THE FUCK YOU WANT TO.
